%include "int"
%include "sign"
%include "main"

%ifndef STARTUP_LNASM_F
%define STARTUP_LNASM_F

.section STARTUP
    sid                             ; disable hardware interrupts. 
                                    ; they will stay disabled until we have run device discovery

    
    mov     (BIOS_STACK >> 8)::byte, SS ; setup stack and dpage for BIOS
    mov     0,  SP

    ; Setup data segment for BIOS. This is just a safeguard: BIOS code deliberately
    ; does not use data page addressing. This is because once an OS is loaded,
    ; exposed functions (IO, DDI, etc...) would require constant context switching of DS
    ; in order to access BIOS variables. The added BIOS overhead of using absolute
    ; addressing is well worth it considering the removed overhead on the OS side.
    mov     (BIOS_DATA >> 8)::byte, DS 
    
    lgoto   bios_main               ; jump to main BIOS code
    hlt                             ; should never return here

%endif