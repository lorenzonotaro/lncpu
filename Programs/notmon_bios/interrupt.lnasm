%ifndef     F_INTERRUPT
%define     F_INTERRUPT

.org            INTVEC
IRQ_HANDLER:
    push            RA                          ; preserve RA
    mov             [KBAVAIL],      RA          ; check if IRQ comes from the keyboard (this also resets the IRQ from the device)
    cmp             RA,             0
    jz              _notkb                      ; if it doesn't return from interrupt
    mov             [KBNEXT],       RA          ; if it does, retrieve the character
    
    mov             RA,             [TTYOUT]    ; echo.

    push            RC                          ; preserve RC, and RD
    push            RD

    mov         INPBUF,     RC                  ; load the buffer page and write pointer into RC:RD
    mov         [BUFWPT],   RD
    mov         RA,         [RC:RD]             ; read the character from the buffer
    inc         RD                              ; advance the write pointer and store it back
    mov         RD,         [BUFWPT]

    pop             RD                          ; restore RC, RD
    pop             RC
_notkb:
    pop             RA                          ; restore RA
    iret

%endif

